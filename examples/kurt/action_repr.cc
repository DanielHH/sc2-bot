#include "action_repr.h"

#include "sc2api/sc2_api.h"

#include "kurt.h"

#include <map>
#include <vector>
#include "constants.h"

//#define DEBUG // Comment out to disable debug prints in this file.
#ifdef DEBUG
#include <iostream>
#define PRINT(s) std::cout << s << std::endl;
#define TEST(s) s
#else
#define PRINT(s)
#define TEST(s)
#endif // DEBUG

using sc2::UNIT_TYPEID;
using sc2::ABILITY_ID;

ActionRepr::ActionRepr(
    std::map<UNIT_TYPEID, int> const & required_,
    std::map<UNIT_TYPEID, int> const & consumed_,
    std::map<UNIT_TYPEID, int> const & borrowed_,
    std::map<UNIT_TYPEID, int> const & produced_,
    float time_) :
    required(required_),
    consumed(consumed_),
    borrowed(borrowed_),
    produced(produced_),
    time_required(time_)
{

}

std::map<ACTION, ActionRepr> ActionRepr::values = {
    //Resource gathering
    { ACTION::SCV_GATHER_MINERALS, ActionRepr({}, {{UNIT_FAKEID::TERRAN_TOWNHALL_SCV_MINERALS, 1}, {UNIT_FAKEID::TERRAN_SCV_VESPENE, 1}},{},{{ UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}, {UNIT_FAKEID::TERRAN_TOWNHALL_SCV_VESPENE, 1}}, 1.5) },
    { ACTION::SCV_GATHER_VESPENE, ActionRepr({{UNIT_TYPEID::TERRAN_REFINERY, 1}},{{UNIT_FAKEID::TERRAN_TOWNHALL_SCV_VESPENE, 1}, { UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{},{{UNIT_FAKEID::TERRAN_TOWNHALL_SCV_MINERALS, 1}, {UNIT_FAKEID::TERRAN_SCV_VESPENE, 1}}, 1.5) },
    { ACTION::MULE_GATHER_MINERALS, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_ORBITALCOMMAND, 1},{UNIT_FAKEID::TERRAN_MULE_MINERALS, -1}},{}, 64) },
    { ACTION::MULE_GATHER_VESPENE, ActionRepr({{UNIT_TYPEID::TERRAN_REFINERY, 1}},{},{{UNIT_TYPEID::TERRAN_ORBITALCOMMAND, 1},{UNIT_FAKEID::TERRAN_MULE_VESPENE, -1}},{}, 64) },

    // Building construction
    // Command centers take longer time to build but is modeled shorter to make the search choose them.
    // Additional time is added to the active action once the building of one has started.
    { ACTION::BUILD_COMMAND_CENTER, ActionRepr({}, { { UNIT_FAKEID::MINERALS, 400 } }, { {UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}}, { {UNIT_TYPEID::TERRAN_COMMANDCENTER, 1}, {UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1}, {UNIT_FAKEID::TERRAN_TOWNHALL_SCV_MINERALS, 16}, {UNIT_TYPEID::NEUTRAL_VESPENEGEYSER, 2}, {UNIT_FAKEID::FOOD_CAP, 15}}, 11) },
    { ACTION::BUILD_PLANETARY_FORTRESS, ActionRepr({{UNIT_TYPEID::TERRAN_ENGINEERINGBAY, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 150}, {UNIT_TYPEID::TERRAN_COMMANDCENTER, 1}},{ { UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1 } },{{UNIT_TYPEID::TERRAN_PLANETARYFORTRESS, 1}}, 36) },
    { ACTION::BUILD_ORBITAL_COMMAND, ActionRepr({{UNIT_TYPEID::TERRAN_BARRACKS, 1}},{{UNIT_TYPEID::TERRAN_COMMANDCENTER, 1}, {UNIT_FAKEID::MINERALS, 150}},{{UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1}},{{UNIT_TYPEID::TERRAN_ORBITALCOMMAND, 1}}, 25) },
    { ACTION::BUILD_SUPPLY_DEPOT, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_SUPPLYDEPOT, 1}, {UNIT_FAKEID::FOOD_CAP, 8}}, 21) },
    { ACTION::BUILD_REFINERY, ActionRepr({},{{UNIT_FAKEID::MINERALS, 75}, {UNIT_TYPEID::NEUTRAL_VESPENEGEYSER, 1}, {UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}, {UNIT_FAKEID::TERRAN_TOWNHALL_SCV_MINERALS, -1}},{},{{UNIT_TYPEID::TERRAN_REFINERY, 1}, {UNIT_FAKEID::TERRAN_SCV_VESPENE, 1}, {UNIT_FAKEID::TERRAN_TOWNHALL_SCV_VESPENE, 2}}, 21) },
    { ACTION::BUILD_BARRACKS, ActionRepr({{UNIT_TYPEID::TERRAN_SUPPLYDEPOT, 1}},{{UNIT_FAKEID::MINERALS, 150}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_BARRACKS, 1}, {UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}}, 46) },
    { ACTION::BUILD_ENGINEERING_BAY, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1}},{{UNIT_FAKEID::MINERALS, 125}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_ENGINEERINGBAY, 1}}, 25) },
    { ACTION::BUILD_BUNKER, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_BUNKER, 1}}, 29) },
    { ACTION::BUILD_SENSOR_TOWER, ActionRepr({{UNIT_TYPEID::TERRAN_ENGINEERINGBAY, 1}},{{UNIT_FAKEID::MINERALS, 125}, {UNIT_FAKEID::VESPENE, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}}, { {UNIT_TYPEID::TERRAN_SENSORTOWER, 1}}, 18) },
    { ACTION::BUILD_MISSILE_TURRET, ActionRepr({{UNIT_TYPEID::TERRAN_ENGINEERINGBAY, 1}},{{UNIT_FAKEID::MINERALS, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_MISSILETURRET, 1}}, 18) },
    { ACTION::BUILD_FACTORY, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_FACTORY, 1}, {UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}}, 43) },
    { ACTION::BUILD_GHOST_ACADEMY, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 50}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_GHOSTACADEMY, 1}}, 29) },
    { ACTION::BUILD_STARPORT, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_STARPORT, 1}, {UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}}, 36) },
    { ACTION::BUILD_ARMORY, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 100}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_ARMORY, 1}}, 46) },
    { ACTION::BUILD_FUSION_CORE, ActionRepr({{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 150}},{{UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}},{{UNIT_TYPEID::TERRAN_FUSIONCORE, 1}}, 46) },
    { ACTION::BUILD_BARRACKS_TECH_LAB, ActionRepr({},{{UNIT_FAKEID::MINERALS, 50}, {UNIT_FAKEID::VESPENE, 25}, {UNIT_TYPEID::TERRAN_BARRACKS, 1}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_TYPEID::TERRAN_BARRACKSTECHLAB, 1}}, 18) },
    { ACTION::BUILD_FACTORY_TECH_LAB, ActionRepr({},{{UNIT_FAKEID::MINERALS, 50}, {UNIT_FAKEID::VESPENE, 25}, {UNIT_TYPEID::TERRAN_FACTORY, 1}},{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_TYPEID::TERRAN_FACTORYTECHLAB, 1}}, 18) },
    { ACTION::BUILD_STARPORT_TECH_LAB, ActionRepr({},{ { UNIT_FAKEID::MINERALS, 50 },{ UNIT_FAKEID::VESPENE, 25 },{ UNIT_TYPEID::TERRAN_STARPORT, 1 } },{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{ { UNIT_TYPEID::TERRAN_STARPORTTECHLAB, 1 } }, 18) },
    { ACTION::BUILD_BARRACKS_REACTOR, ActionRepr({},{{UNIT_FAKEID::MINERALS, 50}, {UNIT_FAKEID::VESPENE, 50}, {UNIT_TYPEID::TERRAN_BARRACKS, 1}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_TYPEID::TERRAN_BARRACKSREACTOR, 2}, {UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}}, 36) },
    { ACTION::BUILD_FACTORY_REACTOR, ActionRepr({},{ { UNIT_FAKEID::MINERALS, 50 },{ UNIT_FAKEID::VESPENE, 50 },{ UNIT_TYPEID::TERRAN_FACTORY, 1 } },{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{ { UNIT_TYPEID::TERRAN_FACTORYREACTOR, 2 }, {UNIT_FAKEID::TERRAN_ANY_FACTORY, 1} }, 36) },
    { ACTION::BUILD_STARPORT_REACTOR, ActionRepr({},{ { UNIT_FAKEID::MINERALS, 50 },{ UNIT_FAKEID::VESPENE, 50 },{ UNIT_TYPEID::TERRAN_STARPORT, 1 } },{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{ { UNIT_TYPEID::TERRAN_STARPORTREACTOR, 2 }, {UNIT_FAKEID::TERRAN_ANY_STARPORT, 1} }, 36) },
    
    // Unit training
    { ACTION::TRAIN_SCV, ActionRepr({},{ {UNIT_FAKEID::TERRAN_TOWNHALL_SCV_MINERALS, 1}, { UNIT_FAKEID::MINERALS, 50 }, {UNIT_FAKEID::FOOD_USED, -1}},{ { UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1 } },{{UNIT_TYPEID::TERRAN_SCV, 1}, {UNIT_FAKEID::TERRAN_SCV_MINERALS, 1}}, 12) },
    { ACTION::TRAIN_MARINE, ActionRepr({},{{UNIT_FAKEID::MINERALS, 50}, {UNIT_FAKEID::FOOD_USED, -1}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_TYPEID::TERRAN_MARINE, 1}}, 18) },
    { ACTION::TRAIN_REAPER, ActionRepr({},{{UNIT_FAKEID::MINERALS, 50}, {UNIT_FAKEID::VESPENE, 50}, {UNIT_FAKEID::FOOD_USED, -1}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{{UNIT_TYPEID::TERRAN_REAPER, 1}}, 32) },
    { ACTION::TRAIN_MARAUDER, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}, {UNIT_FAKEID::VESPENE, 25}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}, {UNIT_TYPEID::TERRAN_BARRACKSTECHLAB, 1}},{{UNIT_TYPEID::TERRAN_MARAUDER, 1}}, 21) },
    { ACTION::TRAIN_GHOST, ActionRepr({{UNIT_TYPEID::TERRAN_GHOSTACADEMY, 1}},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 125}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_TYPEID::TERRAN_BARRACKSTECHLAB, 1}},{{UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}}, 29) },
    { ACTION::TRAIN_HELLION, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_TYPEID::TERRAN_HELLION, 1}}, 21) },
    { ACTION::TRAIN_HELLBAT, ActionRepr({{UNIT_TYPEID::TERRAN_ARMORY, 1}},{{UNIT_FAKEID::MINERALS, 100}, {UNIT_FAKEID::FOOD_USED, -2}}, { {UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_TYPEID::TERRAN_HELLIONTANK, 1}}, 21) },
    { ACTION::TRAIN_WIDOW_MINE, ActionRepr({},{{UNIT_FAKEID::MINERALS, 75}, {UNIT_FAKEID::VESPENE, 25}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}, {UNIT_TYPEID::TERRAN_FACTORYREACTOR, 1}},{{UNIT_TYPEID::TERRAN_WIDOWMINE, 1}}, 29) },
    { ACTION::TRAIN_SIEGE_TANK, ActionRepr({},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 125}, {UNIT_FAKEID::FOOD_USED, -3}},{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}, {UNIT_TYPEID::TERRAN_FACTORYTECHLAB, 1}},{{UNIT_TYPEID::TERRAN_SIEGETANK, 1}}, 32) },
    { ACTION::TRAIN_CYCLONE, ActionRepr({},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 100}, {UNIT_FAKEID::FOOD_USED, -3}},{{UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_TYPEID::TERRAN_CYCLONE, 1}}, 32) },
    { ACTION::TRAIN_THOR, ActionRepr({{UNIT_TYPEID::TERRAN_ARMORY, 1}},{{UNIT_FAKEID::MINERALS, 300}, {UNIT_FAKEID::VESPENE, 200}, {UNIT_FAKEID::FOOD_USED, -6}},{{UNIT_TYPEID::TERRAN_FACTORYTECHLAB, 1}, {UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{{UNIT_TYPEID::TERRAN_THOR, 1}}, 43) },
    { ACTION::TRAIN_VIKING, ActionRepr({},{{UNIT_FAKEID::MINERALS,  150}, {UNIT_FAKEID::VESPENE, 75}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{{UNIT_TYPEID::TERRAN_VIKINGFIGHTER, 1}}, 30) },
    { ACTION::TRAIN_MEDIVAC, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}, {UNIT_FAKEID::VESPENE, 100}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{{UNIT_TYPEID::TERRAN_MEDIVAC, 1}}, 30) },
    { ACTION::TRAIN_LIBERATOR, ActionRepr({},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 150}, {UNIT_FAKEID::FOOD_USED, -3}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{{UNIT_TYPEID::TERRAN_LIBERATOR, 1}}, 43) },
    { ACTION::TRAIN_RAVEN, ActionRepr({},{{UNIT_FAKEID::MINERALS, 100}, {UNIT_FAKEID::VESPENE, 200}, {UNIT_FAKEID::FOOD_USED, -2}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}, {UNIT_TYPEID::TERRAN_STARPORTTECHLAB, 1}},{{UNIT_TYPEID::TERRAN_RAVEN, 1}}, 43) },
    { ACTION::TRAIN_BANSHEE, ActionRepr({},{{UNIT_FAKEID::MINERALS, 150}, {UNIT_FAKEID::VESPENE, 100}, {UNIT_FAKEID::FOOD_USED, -3}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}, {UNIT_TYPEID::TERRAN_STARPORTTECHLAB, 1}},{{UNIT_TYPEID::TERRAN_BANSHEE, 1}}, 43) },
    { ACTION::TRAIN_BATTLECRUISER, ActionRepr({{UNIT_TYPEID::TERRAN_FUSIONCORE, 1}},{{UNIT_FAKEID::MINERALS, 400}, {UNIT_FAKEID::VESPENE, 300}, {UNIT_FAKEID::FOOD_USED, -6}},{{UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}, {UNIT_TYPEID::TERRAN_STARPORTTECHLAB, 1}},{{UNIT_TYPEID::TERRAN_BATTLECRUISER, 1}}, 64) },
    { ACTION::TRAIN_POINT_DEFENSE_DRONE, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_RAVEN, 1}},{{UNIT_TYPEID::TERRAN_POINTDEFENSEDRONE, 1}}, 1) }, // TODO: Energy cost. Time might not be accurate.
    { ACTION::TRAIN_AUTO_TURRET, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_RAVEN, 1}},{{UNIT_TYPEID::TERRAN_AUTOTURRET, 1}}, 1) }, // TODO: Energy cost. Time might not be accurate.

    // Research

    // The FLY commands is NOT meaant to be used in the search
    // but only in the simulation of a current state
    { ACTION::FLY_COMMAND_CENTER, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_COMMANDCENTER, 1}, {UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1}},{}, 10000) },
    { ACTION::FLY_ORBITAL_COMMAND, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_ORBITALCOMMAND, 1}, {UNIT_FAKEID::TERRAN_ANY_COMMANDCENTER, 1}},{}, 10000) },
    { ACTION::FLY_BARRACKS, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_BARRACKS, 1}, {UNIT_FAKEID::TERRAN_ANY_BARRACKS, 1}},{}, 10000) },
    { ACTION::FLY_FACTORY, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_FACTORY, 1}, {UNIT_FAKEID::TERRAN_ANY_FACTORY, 1}},{}, 10000) },
    { ACTION::FLY_STARPORT, ActionRepr({},{},{{UNIT_TYPEID::TERRAN_STARPORT, 1}, {UNIT_FAKEID::TERRAN_ANY_STARPORT, 1}},{}, 10000) },
};

std::map<ACTION, ABILITY_ID> ActionRepr::convert_our_api = {};
std::map<ABILITY_ID, ACTION> ActionRepr::convert_api_our = {};

void ActionRepr::InitConvertMap() {
    convert_api_our[ABILITY_ID::BUILD_COMMANDCENTER] = ACTION::BUILD_COMMAND_CENTER;
    convert_api_our[ABILITY_ID::MORPH_PLANETARYFORTRESS] = ACTION::BUILD_PLANETARY_FORTRESS; // ???
    convert_api_our[ABILITY_ID::MORPH_ORBITALCOMMAND] = ACTION::BUILD_ORBITAL_COMMAND; // ???
    convert_api_our[ABILITY_ID::BUILD_SUPPLYDEPOT] = ACTION::BUILD_SUPPLY_DEPOT;
    convert_api_our[ABILITY_ID::BUILD_REFINERY] = ACTION::BUILD_REFINERY;
    convert_api_our[ABILITY_ID::BUILD_BARRACKS] = ACTION::BUILD_BARRACKS;
    convert_api_our[ABILITY_ID::BUILD_ENGINEERINGBAY] = ACTION::BUILD_ENGINEERING_BAY;
    convert_api_our[ABILITY_ID::BUILD_BUNKER] = ACTION::BUILD_BUNKER;
    convert_api_our[ABILITY_ID::BUILD_SENSORTOWER] = ACTION::BUILD_SENSOR_TOWER;
    convert_api_our[ABILITY_ID::BUILD_MISSILETURRET] = ACTION::BUILD_MISSILE_TURRET;
    convert_api_our[ABILITY_ID::BUILD_FACTORY] = ACTION::BUILD_FACTORY;
    convert_api_our[ABILITY_ID::BUILD_GHOSTACADEMY] = ACTION::BUILD_GHOST_ACADEMY;
    convert_api_our[ABILITY_ID::BUILD_STARPORT] = ACTION::BUILD_STARPORT;
    convert_api_our[ABILITY_ID::BUILD_ARMORY] = ACTION::BUILD_ARMORY;
    convert_api_our[ABILITY_ID::BUILD_FUSIONCORE] = ACTION::BUILD_FUSION_CORE;
    convert_api_our[ABILITY_ID::BUILD_TECHLAB_BARRACKS] = ACTION::BUILD_BARRACKS_TECH_LAB;
    convert_api_our[ABILITY_ID::BUILD_TECHLAB_FACTORY] = ACTION::BUILD_FACTORY_TECH_LAB;
    convert_api_our[ABILITY_ID::BUILD_TECHLAB_STARPORT] = ACTION::BUILD_STARPORT_TECH_LAB;
    convert_api_our[ABILITY_ID::BUILD_REACTOR_BARRACKS] = ACTION::BUILD_BARRACKS_REACTOR;
    convert_api_our[ABILITY_ID::BUILD_REACTOR_FACTORY] = ACTION::BUILD_FACTORY_REACTOR;
    convert_api_our[ABILITY_ID::BUILD_REACTOR_STARPORT] = ACTION::BUILD_STARPORT_REACTOR;
    convert_api_our[ABILITY_ID::TRAIN_SCV] = ACTION::TRAIN_SCV;
    convert_api_our[ABILITY_ID::TRAIN_MARINE] = ACTION::TRAIN_MARINE;
    convert_api_our[ABILITY_ID::TRAIN_REAPER] = ACTION::TRAIN_REAPER;
    convert_api_our[ABILITY_ID::TRAIN_MARAUDER] = ACTION::TRAIN_MARAUDER;
    convert_api_our[ABILITY_ID::TRAIN_GHOST] = ACTION::TRAIN_GHOST;
    convert_api_our[ABILITY_ID::TRAIN_HELLION] = ACTION::TRAIN_HELLION;
    convert_api_our[ABILITY_ID::TRAIN_HELLBAT] = ACTION::TRAIN_HELLBAT;
    convert_api_our[ABILITY_ID::TRAIN_WIDOWMINE] = ACTION::TRAIN_WIDOW_MINE;
    convert_api_our[ABILITY_ID::TRAIN_SIEGETANK] = ACTION::TRAIN_SIEGE_TANK;
    convert_api_our[ABILITY_ID::TRAIN_CYCLONE] = ACTION::TRAIN_CYCLONE;
    convert_api_our[ABILITY_ID::TRAIN_THOR] = ACTION::TRAIN_THOR;
    convert_api_our[ABILITY_ID::TRAIN_VIKINGFIGHTER] = ACTION::TRAIN_VIKING;
    convert_api_our[ABILITY_ID::TRAIN_MEDIVAC] = ACTION::TRAIN_MEDIVAC;
    convert_api_our[ABILITY_ID::TRAIN_LIBERATOR] = ACTION::TRAIN_LIBERATOR;
    convert_api_our[ABILITY_ID::TRAIN_RAVEN] = ACTION::TRAIN_RAVEN;
    convert_api_our[ABILITY_ID::TRAIN_BANSHEE] = ACTION::TRAIN_BANSHEE;
    convert_api_our[ABILITY_ID::TRAIN_BATTLECRUISER] = ACTION::TRAIN_BATTLECRUISER;

    for (auto it = convert_api_our.begin(); it != convert_api_our.end(); ++it){
        convert_our_api[it->second] = it->first;
    }
}

ACTION ActionRepr::CreatesUnit(UNIT_TYPEID unit) {
    ABILITY_ID ability = Kurt::GetUnitType(unit)->ability_id;
    if (convert_api_our.count(ability) == 0) {
        return ACTION::INVALID;
    } else {
        return convert_api_our.at(ability);
    }
}

int ActionRepr::ConsumedUnits(ACTION action, UNIT_TYPEID unit) {
    if (values.count(action) == 0) {
        return 0;
    }
    std::map<UNIT_TYPEID, int> const * consumed = &values.at(action).consumed;
    if (consumed->count(unit) == 0) {
        return 0;
    }
    return consumed->at(unit);
}

#undef DEBUG
#undef PRINT
#undef TEST
